{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
		"name": "OrbitIQ API",
		"description": "Complete API collection for OrbitIQ backend testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345678"
	},
	"item": [
		{
			"name": "Health",
			"item": [
				{
					"name": "Welcome Message",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							]
						},
						"description": "Returns a welcome message for the API"
					},
					"response": []
				},
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"health"
							]
						},
						"description": "Returns the health status of the API"
					},
					"response": []
				}
			],
			"description": "Basic health and status endpoints"
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Initiate Google OAuth",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/google",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"google"
							]
						},
						"description": "Redirects user to Google OAuth login page"
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"logout"
							]
						},
						"description": "Logs out the user by clearing the authentication cookie"
					},
					"response": []
				}
			],
			"description": "Authentication and authorization endpoints"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"all"
							]
						},
						"description": "Retrieve a list of all users in the system"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwtToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"all"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"usr_id\": 123,\n    \"usr_email\": \"john.doe@example.com\",\n    \"usr_firstName\": \"John\",\n    \"usr_lastName\": \"Doe\",\n    \"usr_googleId\": \"1234567890123456789\",\n    \"usr_avatar\": \"https://example.com/avatar.jpg\",\n    \"usr_phone\": \"+1234567890\",\n    \"usr_is_active\": true,\n    \"usr_role_name\": \"USER\",\n    \"usr_del\": 0\n  }\n]"
						}
					]
				},
				{
					"name": "Get Current User (Who Am I)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/whoami",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"whoami"
							]
						},
						"description": "Retrieve information about the currently authenticated user"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwtToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/whoami",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"whoami"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"usr_id\": 123,\n  \"usr_email\": \"john.doe@example.com\",\n  \"usr_firstName\": \"John\",\n  \"usr_lastName\": \"Doe\",\n  \"usr_googleId\": \"1234567890123456789\",\n  \"usr_avatar\": \"https://example.com/avatar.jpg\",\n  \"usr_phone\": \"+1234567890\",\n  \"usr_is_active\": true,\n  \"usr_role_name\": \"USER\",\n  \"usr_del\": 0\n}"
						}
					]
				},
				{
					"name": "Get User By ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{userId}}"
							]
						},
						"description": "Retrieve a specific user by their ID"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwtToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/123",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"123"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"usr_id\": 123,\n  \"usr_email\": \"john.doe@example.com\",\n  \"usr_firstName\": \"John\",\n  \"usr_lastName\": \"Doe\",\n  \"usr_googleId\": \"1234567890123456789\",\n  \"usr_avatar\": \"https://example.com/avatar.jpg\",\n  \"usr_phone\": \"+1234567890\",\n  \"usr_is_active\": true,\n  \"usr_role_name\": \"USER\",\n  \"usr_del\": 0\n}"
						}
					]
				},
				{
					"name": "Update User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"usr_firstName\": \"John\",\n  \"usr_lastName\": \"Updated\",\n  \"usr_phone\": \"+1234567890\",\n  \"usr_is_active\": true,\n  \"usr_role_name\": \"USER\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user/edit/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"edit",
								"{{userId}}"
							]
						},
						"description": "Update a user's information by their ID"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwtToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"usr_firstName\": \"John\",\n  \"usr_lastName\": \"Updated\",\n  \"usr_phone\": \"+1234567890\",\n  \"usr_is_active\": true,\n  \"usr_role_name\": \"USER\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/edit/123",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"edit",
										"123"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"usr_id\": 123,\n  \"usr_email\": \"john.doe@example.com\",\n  \"usr_firstName\": \"John\",\n  \"usr_lastName\": \"Updated\",\n  \"usr_googleId\": \"1234567890123456789\",\n  \"usr_avatar\": \"https://example.com/avatar.jpg\",\n  \"usr_phone\": \"+1234567890\",\n  \"usr_is_active\": true,\n  \"usr_role_name\": \"USER\",\n  \"usr_del\": 0\n}"
						}
					]
				},
				{
					"name": "Delete User (Snap)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/snap/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"snap",
								"{{userId}}"
							]
						},
						"description": "Delete a user by their ID (permanently removes the user from the system)"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwtToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/snap/123",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"snap",
										"123"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"User with id: 123 has been snapped 🫰 !\"\n}"
						}
					]
				}
			],
			"description": "User management endpoints",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{jwtToken}}",
						"type": "string"
					}
				]
			}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-refresh token logic can be added here if needed",
					"// For now, ensure jwtToken variable is set manually"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test scripts",
					"pm.test(\"Status code is successful\", function () {",
					"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 302]);",
					"});",
					"",
					"pm.test(\"Response time is less than 5000ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});",
					"",
					"// Save JWT token from Set-Cookie header if present",
					"const setCookieHeader = pm.response.headers.get('Set-Cookie');",
					"if (setCookieHeader && setCookieHeader.includes('access_token')) {",
					"    const token = setCookieHeader.match(/access_token=([^;]+)/);",
					"    if (token) {",
					"        pm.collectionVariables.set('jwtToken', token[1]);",
					"    }",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string",
			"description": "Base URL for the OrbitIQ API"
		},
		{
			"key": "jwtToken",
			"value": "",
			"type": "string",
			"description": "JWT token for authentication - set this manually or obtain via OAuth flow"
		},
		{
			"key": "userId",
			"value": "123",
			"type": "string",
			"description": "User ID for testing user-specific endpoints"
		}
	]
}
